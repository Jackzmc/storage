[general]
listen_ip = "0.0.0.0"
listen_port = 8080

# The public facing url, this is where users will access the app
# Used for OIDC callbacks
# - if under reverse proxy (nginx, traefik, caddy, etc):
#public_url = "https://storage.example.com"
public_url = "http://localhost:8080"

[backends.local]
path = "/var/tmp/test"

[auth]
# Is account registration disabled? Users will not be able to create
# a new account with email/username + pass
disable_registration = false
[auth.oidc]
enabled = true
# The url the .well-known/openid-configuration exists, this can be a subpath
# Example, for authentik: https://sso.example.com/application/o/YOURAPPSLUG
issuer_url = ""
client_id = ""
client_secret = ""
claims = ["email", "profile"]
# Should an account be created if SSO user id doesn't exist already
create_account = true
# Should normal login (username/email+pass) be disabled, forcing users to use sso?
# If enabled and disable_registration is enabled, the login page will redirect to SSO page directly
disable_normal_login = false

[smtp]
enabled = false
hostname = "smtp.example.com"
port = 587
username = ""
password = ""
# Name to be used for emails, defaults to public_url's domain
#from_name = ""
# The email address to send as, defaults to username
#from_address = ""
tls = "none" # "none", "starttls" or "tls"
